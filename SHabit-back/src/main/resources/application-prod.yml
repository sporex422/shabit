# jpa Setting
spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: "135940431465-e82m01dj8rp1ufn8go11e5351052ri2q.apps.googleusercontent.com"
            client-secret: "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"
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope: profile, email
          naver:
            client-id: "7Ok2n8mRGPoSxzGABJRc"
            client-secret: "QeTRN6VlPc"
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - profile_image
            client-name: Naver
          kakao:
            client-id: "7b4ce626e03d4f1361d309f6b93dd0a4"
            client-secret: "yj34MVMX2Dl8IZPqzHSym8dC1ek7ZeiS"
            scope:
              - profile_nickname
              - account_email
              - profile_image
            client-name: Kakao
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            client-authentication-method: POST

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  jpa:
    hibernate:
      #      ddl-auto: create-drop # jpa DB table update
      ddl-auto: update
    generate-ddl: false # db 초기화 설정 끔
    show-sql: true # 사용된 sql 보임
    # h2 설정
  #    properties:
  #      hibernate:
  #        dialect: org.hibernate.dialect.H2Dialect
  datasource:
    # test h2db setting
    #    driver-class-name: org.h2.Driver
    #    url: jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
    #    username: h2test
    #    password: h2test
    # mariaDB Setting
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://16.16.242.216:3306/shabit
    #    url: jdbc:mariadb://i8a601.p.ssafy.io:3307/ssafy601
    username: shabit_user
    password: Rhcnwkd3019$!@

  # Mail Sending
  mail:
    host: smtp.gmail.com
    port: 587
    username: sporex422
    password: dj110509!!
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  data:
    redis:
      host: shabit.site
      port: 6379
    #      host: i8a601.p.ssafy.io
    #      port: 6380

    # mongo db
    mongodb:
      host: shabit.site
      #      host: i8a601.p.ssafy.io
      port: 27017
      authentication-database: admin
      username: root
      password: root
      database: ssafy

# S3 setting
cloud:
  aws:
    s3:
      bucket: shabit-bucket
    region:
      static: eu-north-1 #Asia Pacific -> seoul
    stack:
      auto: false
    credentials:
      access-key: AKIA4KMX2KNB3Q5COKEX
      secret-key: 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

# Hibernate loggin
logging:
  level:
    org:
      Hibernate: info

mail:
  setFrom: ssafyezpz@gmail.com

jwt:
  secret: UDVaY0VRREoyaEl2d2JlWXFFN2haOWF3ekRxbFBzTnpscEFFaE5mdDBSZw==

key:
  youtube: AIzaSyCgGyrOibFVCbL9Bvkqt0A8MWEYEZPwwJc

app:
  oauth2:
    # authorizedRedirectUris: http://localhost:3000/oauth/redirect
    authorizedRedirectUris: https://shabit.site/oauth/redirect

server:
  ssl:
    key-store: classpath:keystore.p12
    key-store-password: ssafy
    key-store-type: PKCS12
